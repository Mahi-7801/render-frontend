# # import pandas as pd
# # import os
# # from os import *

# # # Specify the directory where the Excel files are stored
# # BASE_DIR = path.dirname(path.abspath(__file__))
# # OUTPUT_DIR = path.join(BASE_DIR, "kpp")
# # GOODS = path.join(OUTPUT_DIR,"goods")
# # WORK = path.join(OUTPUT_DIR,"works")
# # SERVICES = path.join(OUTPUT_DIR,"services")

# # section = input("Choose option (goods/works/services)(press enter to merge all):").strip().lower()
# # # Create an empty list to hold DataFrames
# # df_list = []
# # if section  == "goods":
# #     # Loop through all files in the directory
# #     for filename in os.listdir(GOODS):
# #         # Check if "services" is in the file name    
# #         if section in filename and filename.endswith('.xlsx'):
# #             print(f"merging {section}")
# #             file_path = os.path.join(OUTPUT_DIR, filename)
# #             # Read each Excel file into a DataFrame
# #             df = pd.read_excel(file_path)
# #             # Append the DataFrame to the list
# #             df_list.append(df)
# #         else:
# #             df = pd.read_excel(filename.endswith('.xlsx'))
# #                 # Append the DataFrame to the list
# #             df_list.append(df)


# # # Concatenate all DataFrames in the list into a single DataFrame
# # merged_df = pd.concat(df_list, ignore_index=True)

# # # Save the merged DataFrame to a new Excel file
# # output_file = OUTPUT_DIR+'merged_services.xlsx'
# # merged_df.to_excel(output_file, index=False)

# # print(f"Merged file saved as {output_file}")



# # """
# # import os
# # import pandas as pd

# # OUTPUT_DIR = 'output'

# # def merge_files_in_dir(dir_path, output_file_name):
# #     files_to_merge = [f for f in os.listdir(dir_path) if f.endswith('.xlsx')]
# #     merged_data = []
# #     for file in files_to_merge:
# #         file_path = os.path.join(dir_path, file)
# #         df = pd.read_excel(file_path)
# #         merged_data.append(df)
# #     merged_df = pd.concat(merged_data, ignore_index=True)
# #     output_file_path = os.path.join(dir_path, output_file_name)
# #     merged_df.to_excel(output_file_path, index=False)
# #     print(f"Merged file saved to {output_file_path}")

# # def merge_all_files_in_output_dir():
# #     for root, dirs, files in os.walk(OUTPUT_DIR):
# #         if root == OUTPUT_DIR:
# #             # Merge all files in the output dir
# #             merge_files_in_dir(root, 'all_merged.xlsx')
# #         else:
# #             # Merge files in each subdirectory
# #             dir_name = os.path.basename(root)
# #             output_file_name = f"{dir_name}_merged.xlsx"
# #             merge_files_in_dir(root, output_file_name)

# # if __name__ == '__main__':
# #     merge_all_files_in_output_dir()
# # """
# import argparse

# parser = argparse.ArgumentParser(description="Merges Excel files generated by the KPP scraper.")
# parser.add_argument("--section", type=str, default="", help="Section to merge (optional). Leave empty to merge all.")
# parser.add_argument("--run_id", type=str, required=True, help="Unique run identifier.")
# args = parser.parse_args()


# import os
# import glob
# import pandas as pd
# import fnmatch

# BASE_DIR = os.path.dirname(os.path.abspath(__file__))
# OUTPUT_DIR = os.path.join(BASE_DIR, "kpp")
# GOODS_DIR = os.path.join(OUTPUT_DIR, "goods")
# WORK_DIR = os.path.join(OUTPUT_DIR, "works")
# SERVICES_DIR = os.path.join(OUTPUT_DIR, "services")

# def merge_files_in_dir(dir_path, output_file_name):
#     dataframes = []
#     for root, dirs, files in os.walk(dir_path):
#         for file in files:
#             if file.endswith('.xlsx'):
#                 file_path = os.path.join(root, file)
#                 try:
#                     df = pd.read_excel(file_path, engine='openpyxl')
#                     dataframes.append(df)
#                 except Exception as e:
#                     print(f"Error reading {file_path}: {e}")
#     if dataframes:
#         merged_df = pd.concat(dataframes, ignore_index=True)
#         output_file_path = os.path.join(dir_path, output_file_name)
#         merged_df.to_excel(output_file_path, index=False)
#         print(f"Merged file saved to {output_file_path}")
#     else:
#         print("No valid Excel files were found to merge.")

# def merge_all_merged_files():
#     dataframes = []
#     for file in os.listdir(OUTPUT_DIR):
#         if file in ['goods_merged.xlsx', 'works_merged.xlsx', 'services_merged.xlsx']:
#             file_path = os.path.join(OUTPUT_DIR, file)
#             try:
#                 df = pd.read_excel(file_path, engine='openpyxl')
#                 dataframes.append(df)
#             except Exception as e:
#                 print(f"Error reading {file_path}: {e}")
#     if dataframes:
#         merged_df = pd.concat(dataframes, ignore_index=True)
#         output_file_path = os.path.join(OUTPUT_DIR, 'all_merged.xlsx')
#         merged_df.to_excel(output_file_path, index=False)
#         print(f"All merged file saved to {output_file_path}")
#     else:
#         print("No valid merged Excel files were found.")

# def main():
#     section = args.section
#     if section == "goods":
#         merge_files_in_dir(GOODS_DIR, "goods_merged.xlsx")
#     elif section == "works":
#         merge_files_in_dir(WORK_DIR, "works_merged.xlsx")
#     elif section == "services":
#         merge_files_in_dir(SERVICES_DIR, "services_merged.xlsx")
#     else:
#         merge_files_in_dir(GOODS_DIR, "goods_merged.xlsx")
#         merge_files_in_dir(WORK_DIR, "works_merged.xlsx")
#         merge_files_in_dir(SERVICES_DIR, "services_merged.xlsx")
#         # Merge all merged files
#         dataframes = []
#         for root, dirs, files in os.walk(OUTPUT_DIR):
#             for file in files:
#                 if file.endswith('_merged.xlsx'):
#                     file_path = os.path.join(root, file)
#                     try:
#                         df = pd.read_excel(file_path, engine='openpyxl')
#                         dataframes.append(df)
#                     except Exception as e:
#                         print(f"Error reading {file_path}: {e}")
#         if dataframes:
#             merged_df = pd.concat(dataframes, ignore_index=True)
#             output_file_path = os.path.join(OUTPUT_DIR, 'all_merged.xlsx')
#             merged_df.to_excel(output_file_path, index=False)
#             print(f"All merged file saved to {output_file_path}")
#         else:
#             print("No valid merged Excel files were found.")
# if __name__ == '__main__':
#     main()

import argparse
import os
import pandas as pd

parser = argparse.ArgumentParser(description="Merges Excel files generated by the KPP scraper.")
parser.add_argument("--run_id", type=str, required=True, help="Unique run identifier.")
parser.add_argument("--section", type=str, default="", help="Section to merge (goods, works, services). Leave empty to merge all.")
args = parser.parse_args()

# Setup directory paths
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
OUTPUT_DIR = os.path.join(BASE_DIR, "outputs", "kpp", args.run_id)
GOODS_DIR = os.path.join(OUTPUT_DIR, "goods")
WORK_DIR = os.path.join(OUTPUT_DIR, "works")
SERVICES_DIR = os.path.join(OUTPUT_DIR, "services")

def merge_files_in_dir(dir_path, output_filename):
    dataframes = []
    for file in os.listdir(dir_path):
        if file.endswith(".xlsx"):
            file_path = os.path.join(dir_path, file)
            try:
                df = pd.read_excel(file_path, engine="openpyxl")
                dataframes.append(df)
            except Exception as e:
                print(f"❌ Error reading {file_path}: {e}")
    if dataframes:
        merged_df = pd.concat(dataframes, ignore_index=True)
        output_path = os.path.join(dir_path, output_filename)
        merged_df.to_excel(output_path, index=False)
        print(f"✅ Merged {len(dataframes)} files into: {output_path}")
        return output_path
    else:
        print(f"⚠️ No Excel files found in {dir_path}")
        return None

def merge_all_sections():
    paths = []
    for sec, folder in [("goods", GOODS_DIR), ("works", WORK_DIR), ("services", SERVICES_DIR)]:
        merged = merge_files_in_dir(folder, f"{sec}_merged.xlsx")
        if merged:
            paths.append(merged)

    # Merge the merged_*.xlsx into one all_merged.xlsx
    all_data = []
    for path in paths:
        try:
            df = pd.read_excel(path, engine="openpyxl")
            all_data.append(df)
        except Exception as e:
            print(f"❌ Error reading merged section: {path}, {e}")

    if all_data:
        all_merged_path = os.path.join(OUTPUT_DIR, "all_merged.xlsx")
        pd.concat(all_data, ignore_index=True).to_excel(all_merged_path, index=False)
        print(f"✅ All sections merged into: {all_merged_path}")
    else:
        print("⚠️ No data found to create all_merged.xlsx")

def main():
    if args.section == "goods":
        merge_files_in_dir(GOODS_DIR, "goods_merged.xlsx")
    elif args.section == "works":
        merge_files_in_dir(WORK_DIR, "works_merged.xlsx")
    elif args.section == "services":
        merge_files_in_dir(SERVICES_DIR, "services_merged.xlsx")
    else:
        merge_all_sections()

if __name__ == "__main__":
    main()
